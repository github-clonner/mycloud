version: "3"

# local volumes in: /var/lib/docker/volumes
volumes:
  mailserver:
    driver: local
  rainloop:
    driver: local
  postgres:
    driver: local
  redis:
    driver: local

networks:
  mail_network:
    external: false

services:
  mailserver:
    image: hardware/mailserver:${MAILSERVER_DOCKER_TAG}
    container_name: mailserver
    restart: ${RESTART_MODE}
    domainname: ${MAILSERVER_DOMAIN}                    # Mail server A/MX/FQDN & reverse PTR = mail.domain.tld.
    hostname: ${MAILSERVER_HOSTNAME}
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:spam.${MAILSERVER_DOMAIN}
      - traefik.port=11334
      - traefik.docker.network=http_network
    ports:
      - "25:25"       # SMTP                - Required
    # - "110:110"     # POP3       STARTTLS - Optional - For webmails/desktop clients
    # - "143:143"     # IMAP       STARTTLS - Optional - For webmails/desktop clients
    # - "465:465"     # SMTPS      SSL/TLS  - Optional - Enabled for compatibility reason, otherwise disable
      - "587:587"     # Submission STARTTLS - Optional - For webmails/desktop clients
      - "993:993"     # IMAPS      SSL/TLS  - Optional - For webmails/desktop clients
    # - "995:995"     # POP3S      SSL/TLS  - Optional - For webmails/desktop clients
      - "4190:4190"   # SIEVE      STARTTLS - Optional - Recommended for mail filtering
    environment:
      - DBDRIVER=pgsql                         # postgres only
      - DBHOST=postgres                        # postgres only
      - DBPORT=5432                            # postgres only
      - DBPASS=${DATABASE_USER_PASSWORD}       # database password (required)
      - RSPAMD_PASSWORD=${RSPAMD_PASSWORD}     # Rspamd WebUI password (required)
    # - ADD_DOMAINS=aa.tld, www.bb.tld...      # Add additional domains separated by commas (needed for dkim keys etc.)
    # - ENABLE_POP3=true                       # Enable POP3 protocol
    # - ENABLE_FETCHMAIL=true                  # Enable fetchmail forwarding
      - DISABLE_CLAMAV=true                    # Disable virus scanning
    # - DISABLE_SIGNING=true                   # Disable DKIM/ARC signing
    # - DISABLE_GREYLISTING=true               # Disable greylisting policy
    # - DISABLE_RATELIMITING=true              # Disable ratelimiting policy
    #
    # Full list : https://github.com/hardware/mailserver#environment-variables
    #
    volumes:
      - mailserver:/var/mail
    depends_on:
      - postgres
      - redis
    networks:
      - mail_network
      - http_network

  # Administration interface
  # https://github.com/hardware/postfixadmin
  # http://postfixadmin.sourceforge.net/
  # Configuration : https://github.com/hardware/mailserver/wiki/Postfixadmin-initial-configuration
  postfixadmin:
    image: hardware/postfixadmin
    container_name: postfixadmin
    restart: ${RESTART_MODE}
    domainname: ${MAILSERVER_DOMAIN}
    hostname: ${MAILSERVER_HOSTNAME}
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:postfixadmin.${MAILSERVER_DOMAIN}
      - traefik.port=8888
      - traefik.docker.network=http_network
    environment:
      - DBDRIVER=pgsql                         # postgres only
      - DBHOST=postgres                        # postgres only
      - DBPORT=5432                            # postgres only
      - DBPASS=${DATABASE_USER_PASSWORD}
    depends_on:
      - mailserver
      - postgres
    networks:
      - mail_network
      - http_network

  # Webmail (Optional)
  # https://github.com/hardware/rainloop
  # https://www.rainloop.net/
  # Configuration : https://github.com/hardware/mailserver/wiki/Rainloop-initial-configuration
  rainloop:
    image: hardware/rainloop
    container_name: rainloop
    restart: ${RESTART_MODE}
    labels:
      - traefik.enable=true
      - traefik.port=8888
      - traefik.frontend.rule=Host:webmail.${MAILSERVER_DOMAIN}
      - traefik.docker.network=http_network
    volumes:
      - rainloop:/rainloop/data
    depends_on:
      - mailserver
    networks:
      - mail_network
      - http_network

  # Database
  # https://github.com/docker-library/postgres
  # https://postgresql.org/
  postgres:
    image: postgres:10-alpine
    container_name: postgres
    restart: ${RESTART_MODE}
    stop_signal: SIGINT                 # Fast Shutdown mode
    # Info : These variables are ignored when the volume already exists (if databases was created before).
    expose:
      - 5432
    environment:
      - POSTGRES_DB=postfix
      - POSTGRES_USER=postfix
      - POSTGRES_PASSWORD=${DATABASE_USER_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - mail_network

  # Database
  # https://github.com/docker-library/redis
  # https://redis.io/
  redis:
    image: redis:4-alpine
    container_name: redis
    restart: ${RESTART_MODE}
    command: redis-server --appendonly yes
    volumes:
      - redis:/data
    networks:
      - mail_network
